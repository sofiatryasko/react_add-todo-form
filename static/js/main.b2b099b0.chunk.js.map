{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","TodoList","todos","map","completed","getUser","userId","usersFromServer","find","App","useState","list","setList","input","setInput","setUserId","inputError","setInputError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","floor","random","prevState","type","value","onChange","target","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,OCrDEC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACzC,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKF,OAA7C,SACGE,EAAKJ,QCDGO,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACxC,qCACE,oBAAIH,UAAU,kBAAd,SAAiCG,EAAKC,UACnCD,EAAKJ,MAAQ,cAAC,EAAD,CAAUA,KAAMI,EAAKJ,WCJ5BM,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,6BACGA,EAAMC,KAAI,SAAAJ,GAAI,OACb,oBACE,UAASA,EAAKT,GACdM,UAAS,mBAAcG,EAAKK,UAAY,sBAAwB,IAFlE,SAKE,cAAC,EAAD,CAAUL,KAAMA,KAFXA,EAAKT,UCDlB,SAASe,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOgB,MAEvC,KAGf,IAAMJ,ECjBE,CACb,CACEZ,GAAI,EACJU,MAAO,qBACPI,WAAW,EACXE,OAAQ,GAEV,CACEhB,GAAI,GACJU,MAAO,kBACPI,WAAW,EACXE,OAAQ,GAEV,CACEhB,GAAI,EACJU,MAAO,qCACPI,WAAW,EACXE,OAAQ,IDAiCH,KAAI,SAAAJ,GAAI,kCAChDA,GADgD,IAEnDJ,KAAMU,EAAQN,EAAKO,aAGRG,EAAgB,WAC3B,MAAwBC,mBAASR,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,GAArC,mBAAOJ,EAAP,KAAeS,EAAf,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAkCP,oBAAS,GAA3C,mBAAOQ,EAAP,KAAkBC,EAAlB,KAgCA,OACE,sBAAKvB,UAAU,MAAf,UACE,+CAEA,uBACEwB,OAAO,aACPC,OAAO,OACPC,SAhCU,SAACC,GAWf,GAVAA,EAAMC,iBAEDX,EAAMY,QACTR,GAAc,GAGXX,GACHa,GAAa,GAGXN,EAAMY,QAAUnB,EAAQ,CAC1B,IAAMoB,EAAiB,CACrBpC,GAAIqC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBvB,QAASA,EACTN,MAAOa,EACPT,WAAW,EACXT,KAAMU,GAASC,IAGjBM,GAAQ,SAACkB,GAAD,4BAAmBA,GAAnB,CAA8BJ,OAxBxCZ,EAAS,IACTC,EAAU,KAgCR,UAKE,sBAAKnB,UAAU,QAAf,mBAEE,uBACEmC,KAAK,OACL,UAAQ,aACRC,MAAOnB,EACPoB,SAAU,SAAAV,GACRT,EAASS,EAAMW,OAAOF,MAAMP,QAC5BR,GAAc,MAIlB,sBACErB,UAAS,iBAAYoB,GAAc,aADrC,qCAOF,sBAAKpB,UAAU,QAAf,kBAEE,yBACEoC,MAAO1B,EACP,UAAQ,aACR2B,SAAU,SAAAV,GACRR,GAAWQ,EAAMW,OAAOF,OACxBb,GAAa,IALjB,UAQE,wBAAQa,MAAM,IAAIG,UAAQ,EAACC,UAAQ,EAAnC,2BACC7B,EAAgBJ,KAAI,SAAAR,GAAI,OACvB,wBAAQqC,MAAOrC,EAAKL,GAApB,SAAyBK,EAAKJ,aAIlC,sBACEK,UAAS,iBAAYsB,GAAa,aADpC,qCAOF,wBACEa,KAAK,SACL,UAAQ,eAFV,oBAQF,yBAASnC,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUM,MAAOS,UEpHzB0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b2b099b0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo : React.FC <Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC <Props> = ({ todo }) => (\n  <>\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {!!todo.user && <UserInfo user={todo.user} />}\n  </>\n);\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Todos = {\n  todos: Todo[];\n};\nexport const TodoList = ({ todos } : Todos) => (\n  <ul>\n    {todos.map(todo => (\n      <li\n        data-id={todo.id}\n        className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}\n        key={todo.id}\n      >\n        <TodoInfo todo={todo} />\n      </li>\n    ))}\n  </ul>\n\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [list, setList] = useState(todos);\n  const [input, setInput] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [inputError, setInputError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const clearFormFields = () => {\n    setInput('');\n    setUserId(0);\n  };\n\n  const addTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!input.trim()) {\n      setInputError(true);\n    }\n\n    if (!userId) {\n      setUserError(true);\n    }\n\n    if (input.trim() && userId) {\n      const newTodo : Todo = {\n        id: Math.floor(Math.random() * 100),\n        userId: +userId,\n        title: input,\n        completed: false,\n        user: getUser(+userId),\n      };\n\n      setList((prevState) => [...prevState, newTodo]);\n      clearFormFields();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTodo}\n      >\n        <div className=\"field\">\n          Title:\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={input}\n            onChange={event => {\n              setInput(event.target.value.trim());\n              setInputError(false);\n            }}\n          />\n\n          <span\n            className={`error ${!inputError && 'invisible'}`}\n          >\n            Please enter a title\n          </span>\n        </div>\n\n        <div className=\"field\">\n          User:\n          <select\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={event => {\n              setUserId(+event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option value=\"0\" selected disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          <span\n            className={`error ${!userError && 'invisible'}`}\n          >\n            Please choose a user\n          </span>\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={list} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}